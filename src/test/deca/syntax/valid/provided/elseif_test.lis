`> [9, 0] Program
   +> ListDeclClass [List with 0 elements]
   `> [9, 0] Main
      +> ListDeclVar [List with 1 elements]
      |  []> [10, 12] DeclVar
      |      +> [10, 8] Identifier (int)
      |      +> [10, 12] Identifier (x)
      |      `> [10, 16] Initialization
      |         `> [10, 16] Int (2)
      `> ListInst [List with 2 elements]
         []> [11, 8] IfThenElse
         ||  +> [11, 13] Equals
         ||  |  +> [11, 11] Identifier (x)
         ||  |  `> [11, 16] Int (1)
         ||  +> ListInst [List with 1 elements]
         ||  |  []> [12, 12] Println
         ||  |      `> ListExpr [List with 1 elements]
         ||  |         []> [12, 20] StringLiteral (SEKKKAL)
         ||  `> [14, 8] IfThenElse
         ||     +> [14, 19] Equals
         ||     |  +> [14, 17] Identifier (x)
         ||     |  `> [14, 22] Int (3)
         ||     +> ListInst [List with 1 elements]
         ||     |  []> [15, 12] Println
         ||     |      `> ListExpr [List with 1 elements]
         ||     |         []> [15, 20] StringLiteral (ADAM)
         ||     `> [18, 8] IfThenElse
         ||        +> [18, 18] Equals
         ||        |  +> [18, 16] Identifier (x)
         ||        |  `> [18, 21] Int (2)
         ||        +> ListInst [List with 1 elements]
         ||        |  []> [19, 12] Println
         ||        |      `> ListExpr [List with 1 elements]
         ||        |         []> [19, 20] StringLiteral (Doctor)
         ||        `> [21, 8] IfThenElse
         ||           +> [21, 8] BooleanLiteral (true)
         ||           +> ListInst [List with 1 elements]
         ||           |  []> [22, 12] Println
         ||           |      `> ListExpr [List with 1 elements]
         ||           |         []> [22, 20] StringLiteral (GOa)
         []> [25, 10] Assign
             +> [25, 8] Identifier (x)
             `> [25, 12] Int (1)
