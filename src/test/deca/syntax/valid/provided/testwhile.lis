`> [1, 0] Program
   +> ListDeclClass [List with 0 elements]
   `> [1, 0] Main
      +> ListDeclVar [List with 2 elements]
      |  []> [2, 8] DeclVar
      |  ||  +> [2, 4] Identifier (int)
      |  ||  +> [2, 8] Identifier (a)
      |  ||  `> [2, 12] Initialization
      |  ||     `> [2, 12] Int (2)
      |  []> [2, 15] DeclVar
      |      +> [2, 4] Identifier (int)
      |      +> [2, 15] Identifier (b)
      |      `> [2, 17] Initialization
      |         `> [2, 17] Int (0)
      `> ListInst [List with 2 elements]
         []> [4, 4] While
         ||  +> [4, 11] Not
         ||  |  `> [4, 14] Equals
         ||  |     +> [4, 13] Identifier (u)
         ||  |     `> [4, 16] Int (1)
         ||  `> ListInst [List with 1 elements]
         ||     []> [5, 1] IfThenElse
         ||         +> [5, 9] Equals
         ||         |  +> [5, 6] Modulo
         ||         |  |  +> [5, 5] Identifier (a)
         ||         |  |  `> [5, 7] Int (2)
         ||         |  `> [5, 12] Int (0)
         ||         +> ListInst [List with 1 elements]
         ||         |  []> [6, 7] Assign
         ||         |      +> [6, 5] Identifier (a)
         ||         |      `> [6, 10] Divide
         ||         |         +> [6, 9] Identifier (a)
         ||         |         `> [6, 11] Int (2)
         ||         `> [7, 3] IfThenElse
         ||            +> [7, 3] BooleanLiteral (true)
         ||            +> ListInst [List with 1 elements]
         ||            |  []> [8, 3] Assign
         ||            |      +> [8, 1] Identifier (b)
         ||            |      `> [8, 7] Plus
         ||            |         +> [8, 5] Identifier (b)
         ||            |         `> [8, 9] Int (1)
         []> [11, 4] Println
             `> ListExpr [List with 1 elements]
                []> [11, 12] Identifier (b)
