DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:51) - verify program: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:27) - verify listClass: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.ListDeclField.verifyListDeclField(ListDeclField.java:49) - verify listdec: start
DEBUG fr.ensimag.deca.tree.ListDeclField.verifyListDeclField(ListDeclField.java:53) - verify listdec: end
DEBUG fr.ensimag.deca.tree.ListDeclMethod.verifyListDeclMethod(ListDeclMethod.java:56) - verify listmeth: start
DEBUG fr.ensimag.deca.tree.ListDeclParam.verifyListDeclParam(ListDeclParam.java:53) - verify listdec: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.ListDeclParam.verifyListDeclParam(ListDeclParam.java:58) - verify listdec: end
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:44) - verify listdec: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:48) - verify listdec: end
DEBUG fr.ensimag.deca.tree.ListDeclMethod.verifyListDeclMethod(ListDeclMethod.java:60) - verify listmeth: end
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:33) - verify listClass: end
DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:54) - verify program: end
`> [1, 0] Program
   +> ListDeclClass [List with 1 elements]
   |  []> [1, 0] DeclClass
   |      +> [1, 6] Identifier (A)
   |      |  definition: type defined at [1, 6], type=A
   |      +> [1, 0] Identifier (Object)
   |      |  definition: type (builtin), type=Object
   |      +> ListDeclField [List with 0 elements]
   |      `> ListDeclMethod [List with 1 elements]
   |         []> [2, 4] DeclMethod
   |             +> [2, 4] Identifier (void)
   |             |  definition: type (builtin), type=void
   |             +> [2, 9] Identifier (test)
   |             |  definition: method defined at [2, 4], type=void
   |             +> ListDeclParam [List with 3 elements]
   |             |  []> [2, 14] DeclParam
   |             |  ||  +> [2, 14] Identifier (int)
   |             |  ||  |  definition: type (builtin), type=int
   |             |  ||  `> [2, 18] Identifier (a)
   |             |  ||     definition: parameter defined at [2, 14], type=int
   |             |  []> [2, 21] DeclParam
   |             |  ||  +> [2, 21] Identifier (boolean)
   |             |  ||  |  definition: type (builtin), type=boolean
   |             |  ||  `> [2, 29] Identifier (b)
   |             |  ||     definition: parameter defined at [2, 21], type=boolean
   |             |  []> [2, 32] DeclParam
   |             |      +> [2, 32] Identifier (float)
   |             |      |  definition: type (builtin), type=float
   |             |      `> [2, 38] Identifier (c)
   |             |         definition: parameter defined at [2, 32], type=float
   |             `> [2, 40] MethodBody
   |                +> ListDeclVar [List with 1 elements]
   |                |  []> [3, 12] DeclVar
   |                |      +> [3, 8] Identifier (int)
   |                |      |  definition: type (builtin), type=int
   |                |      +> [3, 12] Identifier (d)
   |                |      |  definition: variable defined at [3, 12], type=int
   |                |      `> NoInitialization
   |                `> ListInst [List with 5 elements]
   |                   []> [4, 9] Assign
   |                   ||  type: int
   |                   ||  +> [4, 8] Identifier (d)
   |                   ||  |  definition: variable defined at [3, 12], type=int
   |                   ||  `> [4, 10] Int (2)
   |                   ||     type: int
   |                   []> [5, 10] Assign
   |                   ||  type: int
   |                   ||  +> [5, 8] Identifier (a)
   |                   ||  |  definition: parameter defined at [2, 14], type=int
   |                   ||  `> [5, 13] Modulo
   |                   ||     type: int
   |                   ||     +> [5, 12] Identifier (a)
   |                   ||     |  definition: parameter defined at [2, 14], type=int
   |                   ||     `> [5, 14] Identifier (d)
   |                   ||        definition: variable defined at [3, 12], type=int
   |                   []> [6, 8] IfThenElse
   |                   ||  +> [6, 13] Greater
   |                   ||  |  type: boolean
   |                   ||  |  +> [6, 12] Identifier (a)
   |                   ||  |  |  definition: parameter defined at [2, 14], type=int
   |                   ||  |  `> [6, 14] Identifier (a)
   |                   ||  |     definition: parameter defined at [2, 14], type=int
   |                   ||  +> ListInst [List with 0 elements]
   |                   ||  `> [8, 8] IfThenElse
   |                   ||     +> [8, 18] GreaterOrEqual
   |                   ||     |  type: boolean
   |                   ||     |  +> ConvFloat
   |                   ||     |  |  type: float
   |                   ||     |  |  `> [8, 17] Identifier (a)
   |                   ||     |  |     definition: parameter defined at [2, 14], type=int
   |                   ||     |  `> [8, 20] Identifier (c)
   |                   ||     |     definition: parameter defined at [2, 32], type=float
   |                   ||     +> ListInst [List with 1 elements]
   |                   ||     |  []> [9, 12] Println
   |                   ||     |      `> ListExpr [List with 1 elements]
   |                   ||     |         []> [9, 20] StringLiteral (gooo)
   |                   ||     |             type: string
   |                   ||     `> [11, 8] IfThenElse
   |                   ||        +> [11, 19] Greater
   |                   ||        |  type: boolean
   |                   ||        |  +> [11, 17] Identifier (c)
   |                   ||        |  |  definition: parameter defined at [2, 32], type=float
   |                   ||        |  `> ConvFloat
   |                   ||        |     type: float
   |                   ||        |     `> [11, 21] Identifier (a)
   |                   ||        |        definition: parameter defined at [2, 14], type=int
   |                   ||        +> ListInst [List with 1 elements]
   |                   ||        |  []> [12, 12] Print
   |                   ||        |      `> ListExpr [List with 1 elements]
   |                   ||        |         []> [12, 18] StringLiteral (booom)
   |                   ||        |             type: string
   |                   ||        `> [14, 8] IfThenElse
   |                   ||           +> [14, 19] Equals
   |                   ||           |  type: boolean
   |                   ||           |  +> ConvFloat
   |                   ||           |  |  type: float
   |                   ||           |  |  `> [14, 17] Identifier (d)
   |                   ||           |  |     definition: variable defined at [3, 12], type=int
   |                   ||           |  `> [14, 22] Identifier (c)
   |                   ||           |     definition: parameter defined at [2, 32], type=float
   |                   ||           +> ListInst [List with 1 elements]
   |                   ||           |  []> [15, 12] Println
   |                   ||           |      `> ListExpr [List with 1 elements]
   |                   ||           |         []> [15, 20] StringLiteral (ca marche chef)
   |                   ||           |             type: string
   |                   ||           `> [17, 8] IfThenElse
   |                   ||              +> [17, 19] NotEquals
   |                   ||              |  type: boolean
   |                   ||              |  +> [17, 17] Identifier (d)
   |                   ||              |  |  definition: variable defined at [3, 12], type=int
   |                   ||              |  `> [17, 22] Identifier (a)
   |                   ||              |     definition: parameter defined at [2, 14], type=int
   |                   ||              +> ListInst [List with 1 elements]
   |                   ||              |  []> [18, 12] Print
   |                   ||              |      `> ListExpr [List with 1 elements]
   |                   ||              |         []> [18, 18] StringLiteral (okeey)
   |                   ||              |             type: string
   |                   ||              `> [20, 8] IfThenElse
   |                   ||                 +> [20, 17] Identifier (b)
   |                   ||                 |  definition: parameter defined at [2, 21], type=boolean
   |                   ||                 +> ListInst [List with 1 elements]
   |                   ||                 |  []> [21, 12] Print
   |                   ||                 |      `> ListExpr [List with 1 elements]
   |                   ||                 |         []> [21, 18] StringLiteral (goooooooooooooo)
   |                   ||                 |             type: string
   |                   ||                 `> [23, 8] IfThenElse
   |                   ||                    +> [23, 8] BooleanLiteral (true)
   |                   ||                    |  type: boolean
   |                   ||                    +> ListInst [List with 2 elements]
   |                   ||                    |  []> [24, 14] Assign
   |                   ||                    |  ||  type: int
   |                   ||                    |  ||  +> [24, 12] Identifier (a)
   |                   ||                    |  ||  |  definition: parameter defined at [2, 14], type=int
   |                   ||                    |  ||  `> [24, 16] Int (1)
   |                   ||                    |  ||     type: int
   |                   ||                    |  []> [25, 12] Print
   |                   ||                    |      `> ListExpr [List with 1 elements]
   |                   ||                    |         []> [25, 18] Identifier (a)
   |                   ||                    |             definition: parameter defined at [2, 14], type=int
   |                   []> [27, 8] Print
   |                   ||  `> ListExpr [List with 1 elements]
   |                   ||     []> [27, 14] StringLiteral (zoooom)
   |                   ||         type: string
   |                   []> [28, 8] Println
   |                       `> ListExpr [List with 1 elements]
   |                          []> [28, 16] StringLiteral (zoooomi)
   |                              type: string
   `> EmptyMain
