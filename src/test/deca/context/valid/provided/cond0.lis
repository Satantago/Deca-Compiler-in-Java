DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:51) - verify program: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:27) - verify listClass: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:33) - verify listClass: end
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:29) - verify Main: start
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:44) - verify listdec: start
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:48) - verify listdec: end
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:36) - verify Main: end
DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:54) - verify program: end
`> [10, 0] Program
   +> ListDeclClass [List with 0 elements]
   `> [10, 0] Main
      +> ListDeclVar [List with 0 elements]
      `> ListInst [List with 1 elements]
         []> [11, 3] IfThenElse
             +> [11, 9] GreaterOrEqual
             |  type: boolean
             |  +> [11, 7] Int (1)
             |  |  type: int
             |  `> [11, 12] Int (0)
             |     type: int
             +> ListInst [List with 1 elements]
             |  []> [12, 6] Println
             |      `> ListExpr [List with 1 elements]
             |         []> [12, 14] StringLiteral (ok)
             |             type: string
             `> [13, 5] IfThenElse
                +> [13, 5] BooleanLiteral (true)
                |  type: boolean
                +> ListInst [List with 1 elements]
                |  []> [14, 6] Println
                |      `> ListExpr [List with 1 elements]
                |         []> [14, 14] StringLiteral (erreur)
                |             type: string
