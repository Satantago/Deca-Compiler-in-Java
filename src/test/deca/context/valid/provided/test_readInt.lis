DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:51) - verify program: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:27) - verify listClass: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:33) - verify listClass: end
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:29) - verify Main: start
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:44) - verify listdec: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:48) - verify listdec: end
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:36) - verify Main: end
DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:54) - verify program: end
`> [2, 0] Program
   +> ListDeclClass [List with 0 elements]
   `> [2, 0] Main
      +> ListDeclVar [List with 1 elements]
      |  []> [3, 8] DeclVar
      |      +> [3, 4] Identifier (int)
      |      |  definition: type (builtin), type=int
      |      +> [3, 8] Identifier (x)
      |      |  definition: variable defined at [3, 8], type=int
      |      `> [3, 12] Initialization
      |         `> [3, 12] Int (9)
      |            type: int
      `> ListInst [List with 2 elements]
         []> [4, 6] Assign
         ||  type: int
         ||  +> [4, 4] Identifier (x)
         ||  |  definition: variable defined at [3, 8], type=int
         ||  `> [4, 8] ReadInt
         ||     type: int
         []> [5, 4] Println
             `> ListExpr [List with 1 elements]
                []> [5, 12] StringLiteral (readint Ã§a marche)
                    type: string
