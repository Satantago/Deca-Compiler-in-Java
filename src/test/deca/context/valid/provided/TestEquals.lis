DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:51) - verify program: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:27) - verify listClass: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:33) - verify listClass: end
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:29) - verify Main: start
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:44) - verify listdec: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:48) - verify listdec: end
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:36) - verify Main: end
DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:54) - verify program: end
`> [2, 0] Program
   +> ListDeclClass [List with 0 elements]
   `> [2, 0] Main
      +> ListDeclVar [List with 1 elements]
      |  []> [3, 8] DeclVar
      |      +> [3, 0] Identifier (boolean)
      |      |  definition: type (builtin), type=boolean
      |      +> [3, 8] Identifier (bool)
      |      |  definition: variable defined at [3, 8], type=boolean
      |      `> [3, 15] Initialization
      |         `> [3, 17] Equals
      |            type: boolean
      |            +> [3, 16] Int (1)
      |            |  type: int
      |            `> [3, 19] Int (2)
      |               type: int
      `> ListInst [List with 1 elements]
         []> [4, 0] IfThenElse
             +> [4, 4] Identifier (bool)
             |  definition: variable defined at [3, 8], type=boolean
             +> ListInst [List with 1 elements]
             |  []> [5, 4] Println
             |      `> ListExpr [List with 1 elements]
             |         []> [5, 12] StringLiteral (booom)
             |             type: string
