DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:51) - verify program: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:27) - verify listClass: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:33) - verify listClass: end
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:29) - verify Main: start
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:44) - verify listdec: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:48) - verify listdec: end
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:36) - verify Main: end
DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:54) - verify program: end
`> [10, 0] Program
   +> ListDeclClass [List with 0 elements]
   `> [10, 0] Main
      +> ListDeclVar [List with 2 elements]
      |  []> [11, 8] DeclVar
      |  ||  +> [11, 4] Identifier (int)
      |  ||  |  definition: type (builtin), type=int
      |  ||  +> [11, 8] Identifier (u)
      |  ||  |  definition: variable defined at [11, 8], type=int
      |  ||  `> [11, 12] Initialization
      |  ||     `> [11, 12] Int (42)
      |  ||        type: int
      |  []> [11, 16] DeclVar
      |      +> [11, 4] Identifier (int)
      |      |  definition: type (builtin), type=int
      |      +> [11, 16] Identifier (v)
      |      |  definition: variable defined at [11, 16], type=int
      |      `> [11, 18] Initialization
      |         `> [11, 18] Int (0)
      |            type: int
      `> ListInst [List with 2 elements]
         []> [13, 4] While
         ||  +> [13, 11] Not
         ||  |  type: boolean
         ||  |  `> [13, 14] Equals
         ||  |     type: boolean
         ||  |     +> [13, 13] Identifier (u)
         ||  |     |  definition: variable defined at [11, 8], type=int
         ||  |     `> [13, 16] Int (1)
         ||  |        type: int
         ||  `> ListInst [List with 2 elements]
         ||     []> [14, 1] IfThenElse
         ||     ||  +> [14, 9] Equals
         ||     ||  |  type: boolean
         ||     ||  |  +> [14, 6] Modulo
         ||     ||  |  |  type: int
         ||     ||  |  |  +> [14, 5] Identifier (u)
         ||     ||  |  |  |  definition: variable defined at [11, 8], type=int
         ||     ||  |  |  `> [14, 7] Int (2)
         ||     ||  |  |     type: int
         ||     ||  |  `> [14, 12] Int (0)
         ||     ||  |     type: int
         ||     ||  +> ListInst [List with 1 elements]
         ||     ||  |  []> [15, 7] Assign
         ||     ||  |      type: int
         ||     ||  |      +> [15, 5] Identifier (u)
         ||     ||  |      |  definition: variable defined at [11, 8], type=int
         ||     ||  |      `> [15, 10] Divide
         ||     ||  |         type: int
         ||     ||  |         +> [15, 9] Identifier (u)
         ||     ||  |         |  definition: variable defined at [11, 8], type=int
         ||     ||  |         `> [15, 11] Int (2)
         ||     ||  |            type: int
         ||     ||  `> [16, 3] IfThenElse
         ||     ||     +> [16, 3] BooleanLiteral (true)
         ||     ||     |  type: boolean
         ||     ||     +> ListInst [List with 1 elements]
         ||     ||     |  []> [17, 7] Assign
         ||     ||     |      type: int
         ||     ||     |      +> [17, 5] Identifier (u)
         ||     ||     |      |  definition: variable defined at [11, 8], type=int
         ||     ||     |      `> [17, 16] Plus
         ||     ||     |         type: int
         ||     ||     |         +> [17, 13] Plus
         ||     ||     |         |  type: int
         ||     ||     |         |  +> [17, 10] Multiply
         ||     ||     |         |  |  type: int
         ||     ||     |         |  |  +> [17, 9] Int (2)
         ||     ||     |         |  |  |  type: int
         ||     ||     |         |  |  `> [17, 11] Identifier (u)
         ||     ||     |         |  |     definition: variable defined at [11, 8], type=int
         ||     ||     |         |  `> [17, 14] Identifier (u)
         ||     ||     |         |     definition: variable defined at [11, 8], type=int
         ||     ||     |         `> [17, 18] Int (1)
         ||     ||     |            type: int
         ||     []> [19, 3] Assign
         ||         type: int
         ||         +> [19, 1] Identifier (v)
         ||         |  definition: variable defined at [11, 16], type=int
         ||         `> [19, 7] Plus
         ||            type: int
         ||            +> [19, 5] Identifier (v)
         ||            |  definition: variable defined at [11, 16], type=int
         ||            `> [19, 9] Int (1)
         ||               type: int
         []> [22, 4] Println
             `> ListExpr [List with 1 elements]
                []> [22, 12] Identifier (v)
                    definition: variable defined at [11, 16], type=int
