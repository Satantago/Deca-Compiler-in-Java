DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:51) - verify program: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:27) - verify listClass: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:33) - verify listClass: end
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:29) - verify Main: start
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:44) - verify listdec: start
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:48) - verify listdec: end
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:36) - verify Main: end
DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:54) - verify program: end
`> [1, 0] Program
   +> ListDeclClass [List with 0 elements]
   `> [1, 0] Main
      +> ListDeclVar [List with 0 elements]
      `> ListInst [List with 1 elements]
         []> [3, 0] IfThenElse
             +> [3, 10] And
             |  type: boolean
             |  +> [3, 4] BooleanLiteral (false)
             |  |  type: boolean
             |  `> [3, 13] BooleanLiteral (true)
             |     type: boolean
             +> ListInst [List with 1 elements]
             |  []> [3, 21] Println
             |      `> ListExpr [List with 1 elements]
             |         []> [3, 29] StringLiteral (true)
             |             type: string
             `> [4, 0] IfThenElse
                +> [4, 15] Or
                |  type: boolean
                |  +> [4, 9] BooleanLiteral (false)
                |  |  type: boolean
                |  `> [4, 18] BooleanLiteral (false)
                |     type: boolean
                +> ListInst [List with 1 elements]
                |  []> [4, 26] Println
                |      `> ListExpr [List with 1 elements]
                |         []> [4, 34] StringLiteral (HO)
                |             type: string
                `> [5, 0] IfThenElse
                   +> [5, 14] NotEquals
                   |  type: boolean
                   |  +> [5, 9] BooleanLiteral (true)
                   |  |  type: boolean
                   |  `> [5, 17] BooleanLiteral (true)
                   |     type: boolean
                   +> ListInst [List with 1 elements]
                   |  []> [5, 24] Println
                   |      `> ListExpr [List with 1 elements]
                   |         []> [5, 32] StringLiteral (PILE)
                   |             type: string
                   `> [6, 0] IfThenElse
                      +> [6, 11] LowerOrEqual
                      |  type: boolean
                      |  +> [6, 9] Int (2)
                      |  |  type: int
                      |  `> [6, 14] Int (1)
                      |     type: int
                      +> ListInst [List with 1 elements]
                      |  []> [6, 18] Println
                      |      `> ListExpr [List with 1 elements]
                      |         []> [6, 26] StringLiteral (a)
                      |             type: string
                      `> [7, 0] IfThenElse
                         +> [7, 11] Equals
                         |  type: boolean
                         |  +> [7, 9] Int (2)
                         |  |  type: int
                         |  `> [7, 14] Int (23)
                         |     type: int
                         +> ListInst [List with 1 elements]
                         |  []> [7, 19] Println
                         |      `> ListExpr [List with 1 elements]
                         |         []> [7, 27] StringLiteral (AZAE)
                         |             type: string
                         `> [8, 0] IfThenElse
                            +> [8, 11] Lower
                            |  type: boolean
                            |  +> [8, 9] Int (2)
                            |  |  type: int
                            |  `> [8, 13] Int (1)
                            |     type: int
                            +> ListInst [List with 1 elements]
                            |  []> [8, 17] Println
                            |      `> ListExpr [List with 1 elements]
                            |         []> [8, 26] Int (35)
                            |             type: int
                            `> [9, 0] IfThenElse
                               +> [9, 11] Greater
                               |  type: boolean
                               |  +> [9, 9] Int (2)
                               |  |  type: int
                               |  `> [9, 13] Int (3)
                               |     type: int
                               +> ListInst [List with 1 elements]
                               |  []> [9, 17] Println
                               |      `> ListExpr [List with 1 elements]
                               |         []> [9, 25] StringLiteral (a)
                               |             type: string
                               `> [10, 0] IfThenElse
                                  +> [10, 11] GreaterOrEqual
                                  |  type: boolean
                                  |  +> [10, 9] Int (2)
                                  |  |  type: int
                                  |  `> [10, 14] Int (3)
                                  |     type: int
                                  +> ListInst [List with 1 elements]
                                  |  []> [10, 18] Println
                                  |      `> ListExpr [List with 1 elements]
                                  |         []> [10, 26] StringLiteral (AA2)
                                  |             type: string
                                  `> [11, 0] IfThenElse
                                     +> [11, 11] NotEquals
                                     |  type: boolean
                                     |  +> [11, 9] Int (2)
                                     |  |  type: int
                                     |  `> [11, 14] Int (2)
                                     |     type: int
                                     +> ListInst [List with 1 elements]
                                     |  []> [11, 18] Println
                                     |      `> ListExpr [List with 1 elements]
                                     |         []> [11, 26] StringLiteral (a)
                                     |             type: string
                                     `> [12, 0] IfThenElse
                                        +> [12, 0] BooleanLiteral (true)
                                        |  type: boolean
                                        +> ListInst [List with 1 elements]
                                        |  []> [12, 6] Println
                                        |      `> ListExpr [List with 1 elements]
                                        |         []> [12, 14] StringLiteral (finally)
                                        |             type: string
