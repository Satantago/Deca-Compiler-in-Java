DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:51) - verify program: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:27) - verify listClass: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:33) - verify listClass: end
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:29) - verify Main: start
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:44) - verify listdec: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:48) - verify listdec: end
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:36) - verify Main: end
DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:54) - verify program: end
`> [12, 0] Program
   +> ListDeclClass [List with 0 elements]
   `> [12, 0] Main
      +> ListDeclVar [List with 1 elements]
      |  []> [13, 4] DeclVar
      |      +> [13, 0] Identifier (int)
      |      |  definition: type (builtin), type=int
      |      +> [13, 4] Identifier (x)
      |      |  definition: variable defined at [13, 4], type=int
      |      `> [13, 8] Initialization
      |         `> [13, 8] Int (5)
      |            type: int
      `> ListInst [List with 1 elements]
         []> [14, 0] IfThenElse
             +> [14, 3] BooleanLiteral (false)
             |  type: boolean
             +> ListInst [List with 1 elements]
             |  []> [15, 5] Println
             |      `> ListExpr [List with 1 elements]
             |         []> [15, 13] StringLiteral (ça marche pas)
             |             type: string
             `> [17, 0] IfThenElse
                +> [17, 0] BooleanLiteral (true)
                |  type: boolean
                +> ListInst [List with 1 elements]
                |  []> [18, 5] IfThenElse
                |      +> [18, 10] Equals
                |      |  type: boolean
                |      |  +> [18, 8] Identifier (x)
                |      |  |  definition: variable defined at [13, 4], type=int
                |      |  `> [18, 13] Int (5)
                |      |     type: int
                |      +> ListInst [List with 1 elements]
                |      |  []> [19, 8] Println
                |      |      `> ListExpr [List with 1 elements]
                |      |         []> [19, 16] StringLiteral (ça marche)
                |      |             type: string
