DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:51) - verify program: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:27) - verify listClass: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.ListDeclField.verifyListDeclField(ListDeclField.java:49) - verify listdec: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.ListDeclField.verifyListDeclField(ListDeclField.java:53) - verify listdec: end
DEBUG fr.ensimag.deca.tree.ListDeclMethod.verifyListDeclMethod(ListDeclMethod.java:56) - verify listmeth: start
DEBUG fr.ensimag.deca.tree.ListDeclParam.verifyListDeclParam(ListDeclParam.java:53) - verify listdec: start
DEBUG fr.ensimag.deca.tree.ListDeclParam.verifyListDeclParam(ListDeclParam.java:58) - verify listdec: end
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:44) - verify listdec: start
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:48) - verify listdec: end
DEBUG fr.ensimag.deca.tree.ListDeclParam.verifyListDeclParam(ListDeclParam.java:53) - verify listdec: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.ListDeclParam.verifyListDeclParam(ListDeclParam.java:58) - verify listdec: end
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:44) - verify listdec: start
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:48) - verify listdec: end
DEBUG fr.ensimag.deca.tree.ListDeclMethod.verifyListDeclMethod(ListDeclMethod.java:60) - verify listmeth: end
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.ListDeclField.verifyListDeclField(ListDeclField.java:49) - verify listdec: start
DEBUG fr.ensimag.deca.tree.ListDeclField.verifyListDeclField(ListDeclField.java:53) - verify listdec: end
DEBUG fr.ensimag.deca.tree.ListDeclMethod.verifyListDeclMethod(ListDeclMethod.java:56) - verify listmeth: start
DEBUG fr.ensimag.deca.tree.ListDeclParam.verifyListDeclParam(ListDeclParam.java:53) - verify listdec: start
DEBUG fr.ensimag.deca.tree.ListDeclParam.verifyListDeclParam(ListDeclParam.java:58) - verify listdec: end
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:44) - verify listdec: start
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:48) - verify listdec: end
DEBUG fr.ensimag.deca.tree.ListDeclParam.verifyListDeclParam(ListDeclParam.java:53) - verify listdec: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.ListDeclParam.verifyListDeclParam(ListDeclParam.java:58) - verify listdec: end
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:44) - verify listdec: start
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:48) - verify listdec: end
DEBUG fr.ensimag.deca.tree.ListDeclParam.verifyListDeclParam(ListDeclParam.java:53) - verify listdec: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.ListDeclParam.verifyListDeclParam(ListDeclParam.java:58) - verify listdec: end
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:44) - verify listdec: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:48) - verify listdec: end
DEBUG fr.ensimag.deca.tree.ListDeclMethod.verifyListDeclMethod(ListDeclMethod.java:60) - verify listmeth: end
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:33) - verify listClass: end
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:29) - verify Main: start
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:44) - verify listdec: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:200) - verify verftype non terminal: start
DEBUG fr.ensimag.deca.tree.Identifier.verifyType(Identifier.java:207) - verify verftype non terminal: sortie
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:48) - verify listdec: end
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:36) - verify Main: end
DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:54) - verify program: end
`> [1, 0] Program
   +> ListDeclClass [List with 2 elements]
   |  []> [1, 0] DeclClass
   |  ||  +> [1, 6] Identifier (A)
   |  ||  |  definition: type defined at [1, 6], type=A
   |  ||  +> [1, 0] Identifier (Object)
   |  ||  |  definition: type (builtin), type=Object
   |  ||  +> ListDeclField [List with 1 elements]
   |  ||  |  []> [2, 14] [visibility=PROTECTED] DeclField
   |  ||  |      +> [2, 10] Identifier (int)
   |  ||  |      |  definition: type (builtin), type=int
   |  ||  |      +> [2, 14] Identifier (x)
   |  ||  |      |  definition: field defined at [2, 14], type=int
   |  ||  |      `> NoInitialization
   |  ||  `> ListDeclMethod [List with 2 elements]
   |  ||     []> [3, 0] DeclMethod
   |  ||     ||  +> [3, 0] Identifier (int)
   |  ||     ||  |  definition: type (builtin), type=int
   |  ||     ||  +> [3, 4] Identifier (getX)
   |  ||     ||  |  definition: method defined at [3, 0], type=int
   |  ||     ||  +> ListDeclParam [List with 0 elements]
   |  ||     ||  `> [3, 10] MethodBody
   |  ||     ||     +> ListDeclVar [List with 0 elements]
   |  ||     ||     `> ListInst [List with 1 elements]
   |  ||     ||        []> [4, 3] Return
   |  ||     ||            `> [4, 14] Selection
   |  ||     ||               type: int
   |  ||     ||               +> [4, 10] This
   |  ||     ||               |  type: A
   |  ||     ||               `> [4, 15] Identifier (x)
   |  ||     ||                  definition: field defined at [2, 14], type=int
   |  ||     []> [6, 0] DeclMethod
   |  ||         +> [6, 0] Identifier (void)
   |  ||         |  definition: type (builtin), type=void
   |  ||         +> [6, 5] Identifier (setX)
   |  ||         |  definition: method defined at [6, 0], type=void
   |  ||         +> ListDeclParam [List with 1 elements]
   |  ||         |  []> [6, 10] DeclParam
   |  ||         |      +> [6, 10] Identifier (int)
   |  ||         |      |  definition: type (builtin), type=int
   |  ||         |      `> [6, 14] Identifier (x)
   |  ||         |         definition: parameter defined at [6, 10], type=int
   |  ||         `> [6, 16] MethodBody
   |  ||            +> ListDeclVar [List with 0 elements]
   |  ||            `> ListInst [List with 1 elements]
   |  ||               []> [7, 10] Assign
   |  ||                   type: int
   |  ||                   +> [7, 7] Selection
   |  ||                   |  type: int
   |  ||                   |  +> [7, 3] This
   |  ||                   |  |  type: A
   |  ||                   |  `> [7, 8] Identifier (x)
   |  ||                   |     definition: field defined at [2, 14], type=int
   |  ||                   `> [7, 12] Identifier (x)
   |  ||                      definition: parameter defined at [6, 10], type=int
   |  []> [10, 0] DeclClass
   |      +> [10, 6] Identifier (B)
   |      |  definition: type defined at [10, 6], type=B
   |      +> [10, 16] Identifier (A)
   |      |  definition: type defined at [1, 6], type=A
   |      +> ListDeclField [List with 0 elements]
   |      `> ListDeclMethod [List with 3 elements]
   |         []> [11, 0] DeclMethod
   |         ||  +> [11, 0] Identifier (int)
   |         ||  |  definition: type (builtin), type=int
   |         ||  +> [11, 4] Identifier (getX)
   |         ||  |  definition: method defined at [11, 0], type=int
   |         ||  +> ListDeclParam [List with 0 elements]
   |         ||  `> [11, 10] MethodBody
   |         ||     +> ListDeclVar [List with 0 elements]
   |         ||     `> ListInst [List with 1 elements]
   |         ||        []> [12, 3] Return
   |         ||            `> [12, 14] Selection
   |         ||               type: int
   |         ||               +> [12, 10] This
   |         ||               |  type: B
   |         ||               `> [12, 15] Identifier (x)
   |         ||                  definition: field defined at [2, 14], type=int
   |         []> [14, 0] DeclMethod
   |         ||  +> [14, 0] Identifier (void)
   |         ||  |  definition: type (builtin), type=void
   |         ||  +> [14, 5] Identifier (setX)
   |         ||  |  definition: method defined at [14, 0], type=void
   |         ||  +> ListDeclParam [List with 1 elements]
   |         ||  |  []> [14, 10] DeclParam
   |         ||  |      +> [14, 10] Identifier (int)
   |         ||  |      |  definition: type (builtin), type=int
   |         ||  |      `> [14, 14] Identifier (x)
   |         ||  |         definition: parameter defined at [14, 10], type=int
   |         ||  `> [14, 16] MethodBody
   |         ||     +> ListDeclVar [List with 0 elements]
   |         ||     `> ListInst [List with 1 elements]
   |         ||        []> [15, 10] Assign
   |         ||            type: int
   |         ||            +> [15, 7] Selection
   |         ||            |  type: int
   |         ||            |  +> [15, 3] This
   |         ||            |  |  type: B
   |         ||            |  `> [15, 8] Identifier (x)
   |         ||            |     definition: field defined at [2, 14], type=int
   |         ||            `> [15, 12] Identifier (x)
   |         ||               definition: parameter defined at [14, 10], type=int
   |         []> [17, 0] DeclMethod
   |             +> [17, 0] Identifier (float)
   |             |  definition: type (builtin), type=float
   |             +> [17, 6] Identifier (somme)
   |             |  definition: method defined at [17, 0], type=float
   |             +> ListDeclParam [List with 1 elements]
   |             |  []> [17, 12] DeclParam
   |             |      +> [17, 12] Identifier (int)
   |             |      |  definition: type (builtin), type=int
   |             |      `> [17, 16] Identifier (x)
   |             |         definition: parameter defined at [17, 12], type=int
   |             `> [17, 18] MethodBody
   |                +> ListDeclVar [List with 2 elements]
   |                |  []> [18, 11] DeclVar
   |                |  ||  +> [18, 3] Identifier (boolean)
   |                |  ||  |  definition: type (builtin), type=boolean
   |                |  ||  +> [18, 11] Identifier (a)
   |                |  ||  |  definition: variable defined at [18, 11], type=boolean
   |                |  ||  `> [18, 15] Initialization
   |                |  ||     `> [18, 15] BooleanLiteral (true)
   |                |  ||        type: boolean
   |                |  []> [19, 9] DeclVar
   |                |      +> [19, 3] Identifier (float)
   |                |      |  definition: type (builtin), type=float
   |                |      +> [19, 9] Identifier (y)
   |                |      |  definition: variable defined at [19, 9], type=float
   |                |      `> NoInitialization
   |                `> ListInst [List with 1 elements]
   |                   []> [20, 3] IfThenElse
   |                       +> [20, 7] Identifier (a)
   |                       |  definition: variable defined at [18, 11], type=boolean
   |                       +> ListInst [List with 1 elements]
   |                       |  []> [21, 1] Return
   |                       |      `> ConvFloat
   |                       |         type: float
   |                       |         `> [21, 8] Identifier (x)
   |                       |            definition: parameter defined at [17, 12], type=int
   |                       `> [23, 3] IfThenElse
   |                          +> [23, 3] BooleanLiteral (true)
   |                          |  type: boolean
   |                          +> ListInst [List with 1 elements]
   |                          |  []> [24, 1] Return
   |                          |      `> [24, 8] Identifier (y)
   |                          |         definition: variable defined at [19, 9], type=float
   `> [28, 0] Main
      +> ListDeclVar [List with 5 elements]
      |  []> [29, 2] DeclVar
      |  ||  +> [29, 0] Identifier (A)
      |  ||  |  definition: type defined at [1, 6], type=A
      |  ||  +> [29, 2] Identifier (a)
      |  ||  |  definition: variable defined at [29, 2], type=A
      |  ||  `> [29, 6] Initialization
      |  ||     `> [29, 6] null
      |  ||        type: null
      |  []> [30, 2] DeclVar
      |  ||  +> [30, 0] Identifier (B)
      |  ||  |  definition: type defined at [10, 6], type=B
      |  ||  +> [30, 2] Identifier (b)
      |  ||  |  definition: variable defined at [30, 2], type=B
      |  ||  `> [30, 6] Initialization
      |  ||     `> [30, 6] new
      |  ||        type: B
      |  ||        `> [30, 10] Identifier (B)
      |  ||           definition: type defined at [10, 6], type=B
      |  []> [31, 2] DeclVar
      |  ||  +> [31, 0] Identifier (A)
      |  ||  |  definition: type defined at [1, 6], type=A
      |  ||  +> [31, 2] Identifier (d)
      |  ||  |  definition: variable defined at [31, 2], type=A
      |  ||  `> [31, 6] Initialization
      |  ||     `> [31, 6] new
      |  ||        type: A
      |  ||        `> [31, 10] Identifier (A)
      |  ||           definition: type defined at [1, 6], type=A
      |  []> [32, 2] DeclVar
      |  ||  +> [32, 0] Identifier (B)
      |  ||  |  definition: type defined at [10, 6], type=B
      |  ||  +> [32, 2] Identifier (z)
      |  ||  |  definition: variable defined at [32, 2], type=B
      |  ||  `> [32, 6] Initialization
      |  ||     `> [32, 7] Cast
      |  ||        type: B
      |  ||        +> [32, 7] Identifier (B)
      |  ||        |  definition: type defined at [10, 6], type=B
      |  ||        `> [32, 10] Identifier (d)
      |  ||           definition: variable defined at [31, 2], type=A
      |  []> [33, 8] DeclVar
      |      +> [33, 0] Identifier (boolean)
      |      |  definition: type (builtin), type=boolean
      |      +> [33, 8] Identifier (c)
      |      |  definition: variable defined at [33, 8], type=boolean
      |      `> [33, 12] Initialization
      |         `> [33, 14] instanceof
      |            type: boolean
      |            +> [33, 12] Identifier (b)
      |            |  definition: variable defined at [30, 2], type=B
      |            `> [33, 25] Identifier (a)
      |               definition: variable defined at [29, 2], type=A
      `> ListInst [List with 1 elements]
         []> [34, 0] IfThenElse
             +> [34, 5] Equals
             |  type: boolean
             |  +> [34, 4] Identifier (a)
             |  |  definition: variable defined at [29, 2], type=A
             |  `> [34, 7] Identifier (b)
             |     definition: variable defined at [30, 2], type=B
             +> ListInst [List with 1 elements]
             |  []> [35, 3] Println
             |      `> ListExpr [List with 1 elements]
             |         []> [35, 11] StringLiteral (goody)
             |             type: string
             `> [37, 0] IfThenElse
                +> [37, 0] BooleanLiteral (true)
                |  type: boolean
                +> ListInst [List with 3 elements]
                |  []> [38, 0] Println
                |  ||  `> ListExpr [List with 1 elements]
                |  ||     []> [38, 15] MethodCall
                |  ||         type: int
                |  ||         +> [38, 8] Identifier (a)
                |  ||         |  definition: variable defined at [29, 2], type=A
                |  ||         +> [38, 10] Identifier (getX)
                |  ||         |  definition: method defined at [3, 0], type=int
                |  ||         `> ListExpr [List with 0 elements]
                |  []> [39, 0] Println
                |  ||  `> ListExpr [List with 1 elements]
                |  ||     []> [39, 15] MethodCall
                |  ||         type: int
                |  ||         +> [39, 8] Identifier (b)
                |  ||         |  definition: variable defined at [30, 2], type=B
                |  ||         +> [39, 10] Identifier (getX)
                |  ||         |  definition: method defined at [11, 0], type=int
                |  ||         `> ListExpr [List with 0 elements]
                |  []> [40, 7] MethodCall
                |      type: void
                |      +> [40, 0] Identifier (a)
                |      |  definition: variable defined at [29, 2], type=A
                |      +> [40, 2] Identifier (setX)
                |      |  definition: method defined at [6, 0], type=void
                |      `> ListExpr [List with 1 elements]
                |         []> [40, 7] Int (3)
                |             type: int
